{"mappings":"AAYA,MAAMA,EAAa,CACjBC,OAAQ,CACN,CACEC,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,IACJC,KAAM,mBAER,CACED,GAAI,GACJC,KAAM,YAER,CACED,GAAI,MACJC,KAAM,OAER,CACED,GAAI,GACJC,KAAM,aAwBNC,EAnBQ,CACZ,CACEC,MAAO,cACPC,SAAU,CAAC,GAAI,GAAI,KAErB,CACED,MAAO,8CACPC,SAAU,CAAC,GAAI,GAAI,KAErB,CACED,MAAO,kBACPC,SAAU,CAAC,GAAI,KAEjB,CACED,MAAO,0BACPC,SAAU,CAAC,IAAK,GAAI,GAAI,MAIJC,KAAKC,IACpB,IAAKA,EAAMC,WAAY,OAGhCL,EAAUG,KAAI,EAACD,SAAEA,EAAQG,WAAEA,MACzBT,EAAWC,OAAOM,KAAKG,IACrBJ,EAASK,SAAQ,CAACC,EAAIC,KAChBD,IAAOF,EAAKR,KACdO,EAAWI,GAAQH,EAAKP,KAAI,GAE9B,GACF,IAGJ,MAAMW,EAAOC,SAASC,cAAc,UAE9BC,EAASb,EACZG,KAAI,EAACE,WAAEA,EAAUJ,MAAEA,GAASH,IAMpB,6BACLA,EAAK,OACDG,MANJI,EAAWS,OAAS,EAChBT,EAAWU,MAAM,EAAG,GAAGC,KAAK,MAAQ,WACpCX,EAAWW,KAAK,sBAMvBA,KAAK,IAERN,EAAKO,mBAAmB,YAAaJ","sources":["src/js/task-02-films.js"],"sourcesContent":["// Представлений масив фільмів (films) кожен елемент масиву являється об'єктом в якого є назва фільму та масив з жанрами до яких він відноситься, але в масиві (genreIDs) тільки ID цих фільмів.\n// Потрібно в кожен об'єкт додати ключ genreNames який буде масивом з назвами жанрів до яких цей фільм відноситься. Після чого відрендерити список фільмів як наведено в прикладі нижче (Expected result), якщо в списку жанрів більш ніж 2 фільми тоді рендеримо назву перших двох жанрів, а всі інші замінюємо на \"Others\".\n// Співвідношення ID жанру та назви жанру знаходиться в об'єкті genresInfo.\n\n//  Expected result\n// Films list:\n// 1. 'Interceptor: Action, Thriller, Others.'\n// 2. 'Fantastic Beasts: The Secrets of Dumbledore: Fantasy, Adventure, Others.'\n// 3. 'Last Seen Alive: Action, Thriller.'\n// 4. 'Jurassic World Dominion: Science Fiction, Action, Others.'\n\n\nconst genresInfo = {\n  genres: [\n    {\n      id: 28,\n      name: \"Action\",\n    },\n    {\n      id: 12,\n      name: \"Adventure\",\n    },\n    {\n      id: 14,\n      name: \"Fantasy\",\n    },\n    {\n      id: 878,\n      name: \"Science Fiction\",\n    },\n    {\n      id: 53,\n      name: \"Thriller\",\n    },\n    {\n      id: 10752,\n      name: \"War\",\n    },\n    {\n      id: 37,\n      name: \"Western\",\n    },\n  ],\n};\n\nconst films = [\n  {\n    title: \"Interceptor\",\n    genreIDs: [28, 53, 12],\n  },\n  {\n    title: \"Fantastic Beasts: The Secrets of Dumbledore\",\n    genreIDs: [14, 12, 28],\n  },\n  {\n    title: \"Last Seen Alive\",\n    genreIDs: [28, 53],\n  },\n  {\n    title: \"Jurassic World Dominion\",\n    genreIDs: [878, 28, 12, 53],\n  },\n];\n\nconst filmsList = films.map((film) => {\n  return { ...film, genreNames: [] };\n});\n\nfilmsList.map(({ genreIDs, genreNames }) => {\n  genresInfo.genres.map((item) => {\n    genreIDs.forEach((el, elId) => {\n      if (el === item.id) {\n        genreNames[elId] = item.name;\n      }\n    });\n  });\n});\n\nconst list = document.querySelector(\"#films\");\n\nconst markup = filmsList\n  .map(({ genreNames, title }, id) => {\n    const genres =\n      genreNames.length > 2\n        ? genreNames.slice(0, 2).join(\", \") + \", Others\"\n        : genreNames.join(\", \");\n\n    return `<li class=\"films-item\"><p>${\n      id + 1\n    }. \"${title}: ${genres}.\"</p> </li>`;\n  })\n  .join(\"\");\n\nlist.insertAdjacentHTML(\"beforeend\", markup);\n"],"names":["$c47d51e014cd18b8$var$genresInfo","genres","id","name","$c47d51e014cd18b8$var$filmsList","title","genreIDs","map","film","genreNames","item","forEach","el","elId","$c47d51e014cd18b8$var$list","document","querySelector","$c47d51e014cd18b8$var$markup","length","slice","join","insertAdjacentHTML"],"version":3,"file":"task-02-films.dd1df942.js.map"}